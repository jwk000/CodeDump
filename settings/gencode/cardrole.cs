//this file is generated by xml2code tool 7/18/2018 19:28:28
//DO NOT EDIT IT !

using System;
using System.Collections.Generic;
using System.IO;
using System.Xml;
using GYGeneric;

namespace GYXMLData
{

    
    public class score :IXmlParser
    {
        public int level = ; 
        public int single = ; 
        public int long = ; 
        public int slide = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["level"]!=null)
            {
                level = int.Parse(node.Attributes["level"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("level");
                if(child!=null)
                {
                    level = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["single"]!=null)
            {
                single = int.Parse(node.Attributes["single"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("single");
                if(child!=null)
                {
                    single = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["long"]!=null)
            {
                long = int.Parse(node.Attributes["long"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("long");
                if(child!=null)
                {
                    long = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["slide"]!=null)
            {
                slide = int.Parse(node.Attributes["slide"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("slide");
                if(child!=null)
                {
                    slide = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class level_up_material :IXmlParser
    {
        public int level = ; 
        public int gold = ; 
        public int fragment_num = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["level"]!=null)
            {
                level = int.Parse(node.Attributes["level"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("level");
                if(child!=null)
                {
                    level = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["gold"]!=null)
            {
                gold = int.Parse(node.Attributes["gold"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("gold");
                if(child!=null)
                {
                    gold = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["fragment_num"]!=null)
            {
                fragment_num = int.Parse(node.Attributes["fragment_num"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("fragment_num");
                if(child!=null)
                {
                    fragment_num = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class material :IXmlParser
    {
        public int item_id = ; 
        public int num = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["item_id"]!=null)
            {
                item_id = int.Parse(node.Attributes["item_id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("item_id");
                if(child!=null)
                {
                    item_id = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["num"]!=null)
            {
                num = int.Parse(node.Attributes["num"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("num");
                if(child!=null)
                {
                    num = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class star_up_material :IXmlParser
    {
        public int star = ; 
        public int gold = ; 
        public List<material> material_list = new List<material>(); 

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("material_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("material");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    material value = new material();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    material_list.Add(value);
                }
            }
            if(node.Attributes!=null && node.Attributes["star"]!=null)
            {
                star = int.Parse(node.Attributes["star"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("star");
                if(child!=null)
                {
                    star = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["gold"]!=null)
            {
                gold = int.Parse(node.Attributes["gold"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("gold");
                if(child!=null)
                {
                    gold = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class ability :IXmlParser
    {
        public int type = ; 
        public int val = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["type"]!=null)
            {
                type = int.Parse(node.Attributes["type"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("type");
                if(child!=null)
                {
                    type = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["val"]!=null)
            {
                val = int.Parse(node.Attributes["val"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("val");
                if(child!=null)
                {
                    val = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class level_ability :IXmlParser
    {
        public int favor_level = ; 
        public List<ability> abilitys = new List<ability>(); 

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("abilitys");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("ability");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    ability value = new ability();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    abilitys.Add(value);
                }
            }
            if(node.Attributes!=null && node.Attributes["favor_level"]!=null)
            {
                favor_level = int.Parse(node.Attributes["favor_level"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("favor_level");
                if(child!=null)
                {
                    favor_level = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class level_skill :IXmlParser
    {
        public int star = ; 
        public int skill_id = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["star"]!=null)
            {
                star = int.Parse(node.Attributes["star"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("star");
                if(child!=null)
                {
                    star = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["skill_id"]!=null)
            {
                skill_id = int.Parse(node.Attributes["skill_id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("skill_id");
                if(child!=null)
                {
                    skill_id = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class skin :IXmlParser
    {
        public int index = ; 
        public int skin_id = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["index"]!=null)
            {
                index = int.Parse(node.Attributes["index"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("index");
                if(child!=null)
                {
                    index = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["skin_id"]!=null)
            {
                skin_id = int.Parse(node.Attributes["skin_id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("skin_id");
                if(child!=null)
                {
                    skin_id = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class info :IXmlParser
    {
        public int index = ; 
        public string name = ; 
        public string desc = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["name"]!=null)
            {
                name = node.Attributes["name"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("name");
                if(child!=null)
                {
                    name = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["desc"]!=null)
            {
                desc = node.Attributes["desc"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("desc");
                if(child!=null)
                {
                    desc = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["index"]!=null)
            {
                index = int.Parse(node.Attributes["index"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("index");
                if(child!=null)
                {
                    index = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class story :IXmlParser
    {
        public int index = ; 
        public int story_id = ; 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["index"]!=null)
            {
                index = int.Parse(node.Attributes["index"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("index");
                if(child!=null)
                {
                    index = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["story_id"]!=null)
            {
                story_id = int.Parse(node.Attributes["story_id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("story_id");
                if(child!=null)
                {
                    story_id = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class information :IXmlParser
    {
        public string name = ; 
        public List<info> info_list = new List<info>(); 
        public List<story> story_list = new List<story>(); 

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("info_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("info");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    info value = new info();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    info_list.Add(value);
                }
            }
            {
                var mid_node = node.SelectSingleNode("story_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("story");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    story value = new story();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    story_list.Add(value);
                }
            }
            if(node.Attributes!=null && node.Attributes["name"]!=null)
            {
                name = node.Attributes["name"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("name");
                if(child!=null)
                {
                    name = child.InnerText;
                }
            }

            return true;
        }
    }

    
    public class cardrole :IXmlParser
    {
        public int id = ; 
        public string name = ; 
        public int sub_type = ; 
        public int rank = ; 
        public int default_star = ; 
        public string head_big_pic = ; 
        public string head_pic = ; 
        public string default_skin = ; 
        public string q_skin = ; 
        public int fragment_id = ; 
        public List<score> level_score = new List<score>(); 
        public List<level_up_material> level_up_material_list = new List<level_up_material>(); 
        public List<star_up_material> star_up_material_list = new List<star_up_material>(); 
        public List<level_ability> ability_list = new List<level_ability>(); 
        public List<level_skill> skill_list = new List<level_skill>(); 
        public List<skin> skin_list = new List<skin>(); 

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("level_score");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("score");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    score value = new score();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    level_score.Add(value);
                }
            }
            {
                var mid_node = node.SelectSingleNode("level_up_material_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("level_up_material");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    level_up_material value = new level_up_material();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    level_up_material_list.Add(value);
                }
            }
            {
                var mid_node = node.SelectSingleNode("star_up_material_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("star_up_material");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    star_up_material value = new star_up_material();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    star_up_material_list.Add(value);
                }
            }
            {
                var mid_node = node.SelectSingleNode("ability_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("level_ability");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    level_ability value = new level_ability();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    ability_list.Add(value);
                }
            }
            {
                var mid_node = node.SelectSingleNode("skill_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("level_skill");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    level_skill value = new level_skill();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    skill_list.Add(value);
                }
            }
            {
                var mid_node = node.SelectSingleNode("skin_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("skin");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    skin value = new skin();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    skin_list.Add(value);
                }
            }
            if(node.Attributes!=null && node.Attributes["name"]!=null)
            {
                name = node.Attributes["name"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("name");
                if(child!=null)
                {
                    name = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["head_big_pic"]!=null)
            {
                head_big_pic = node.Attributes["head_big_pic"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("head_big_pic");
                if(child!=null)
                {
                    head_big_pic = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["head_pic"]!=null)
            {
                head_pic = node.Attributes["head_pic"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("head_pic");
                if(child!=null)
                {
                    head_pic = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["default_skin"]!=null)
            {
                default_skin = node.Attributes["default_skin"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("default_skin");
                if(child!=null)
                {
                    default_skin = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["q_skin"]!=null)
            {
                q_skin = node.Attributes["q_skin"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("q_skin");
                if(child!=null)
                {
                    q_skin = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["id"]!=null)
            {
                id = int.Parse(node.Attributes["id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("id");
                if(child!=null)
                {
                    id = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["sub_type"]!=null)
            {
                sub_type = int.Parse(node.Attributes["sub_type"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("sub_type");
                if(child!=null)
                {
                    sub_type = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["rank"]!=null)
            {
                rank = int.Parse(node.Attributes["rank"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("rank");
                if(child!=null)
                {
                    rank = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["default_star"]!=null)
            {
                default_star = int.Parse(node.Attributes["default_star"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("default_star");
                if(child!=null)
                {
                    default_star = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["fragment_id"]!=null)
            {
                fragment_id = int.Parse(node.Attributes["fragment_id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("fragment_id");
                if(child!=null)
                {
                    fragment_id = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class cardroleData :IXmlParser
    {
        public Dictionary<int,cardrole> cardrole_list = new Dictionary<int,cardrole>(); 

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("cardrole_list");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var nodes = mid_node.SelectNodes("cardrole");
                if(nodes!=null)
                {
                    foreach(XmlNode n in nodes)
                    {
                        cardrole value = new cardrole();
                        if(!value.Parse(n))
                        {
                            return false;
                        }
                        cardrole_list.Add(value.id, value);
                    }
                }
            }

            return true;
        }
    }

}
