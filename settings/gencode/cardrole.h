//this file is generated by xml2code tool at 7/19/2018 17:04:32
//do NOT edit it !

#pragma once
#include <map>
#include <vector>
#include <string>
#include "../shared/xml_config_interface.h"

//enum

//class

struct score : public IXmlParser
{
    int level; 
    int single; 
    int longscore; 
    int slide; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct level_up_material : public IXmlParser
{
    int level; 
    int gold; 
    int fragment_num; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct material : public IXmlParser
{
    int item_id; 
    int num; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct star_up_material : public IXmlParser
{
    int star; 
    int gold; 
    std::vector<material> material_list; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct ability : public IXmlParser
{
    int type; 
    int val; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct level_ability : public IXmlParser
{
    int favor_level; 
    std::vector<ability> abilitys; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct level_skill : public IXmlParser
{
    int star; 
    int skill_id; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct skin : public IXmlParser
{
    int index; 
    int skin_id; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct info : public IXmlParser
{
    int index; 
    std::string name; 
    std::string desc; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct story : public IXmlParser
{
    int index; 
    int story_id; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct information : public IXmlParser
{
    std::string name; 
    std::vector<info> info_list; 
    std::vector<story> story_list; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct cardrole : public IXmlParser
{
    int id; 
    std::string name; 
    int sub_type; 
    int rank; 
    int default_star; 
    std::string head_big_pic; 
    std::string head_pic; 
    std::string default_skin; 
    std::string q_skin; 
    int fragment_id; 
    std::vector<score> level_score; 
    std::vector<level_up_material> level_up_material_list; 
    std::vector<star_up_material> star_up_material_list; 
    std::vector<level_ability> ability_list; 
    std::vector<level_skill> skill_list; 
    std::vector<skin> skin_list; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct cardroleData : public IXmlParser
{
    std::map<int,cardrole> cardrole_list; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

//hotfix
class cardrole_hotfix_xml:public IHotfixXml
{
public:
    virtual bool Load(variant* v);
    virtual void* Root(){return root;}
private:
    cardroleData* root;
};
