//this file is generated by xml2code tool at 7/19/2018 17:04:32
//do NOT edit it !

#include "music_info.h"
#include <sstream>

bool XmlMusicInfoMode::LoadFromString(std::string s)
{
    return false;
}
bool XmlMusic::LoadFromString(std::string s)
{
    return false;
}
bool XmlMusicDifficulty::LoadFromString(std::string s)
{
    return false;
}
bool XmlMusicInfo::LoadFromString(std::string s)
{
    return false;
}

bool XmlMusicInfoMode::LoadFromVariant(variant* v)
{
    if(from_str_variant(v->get_child("value"), value)<0) return false;

    return true;
}
bool XmlMusic::LoadFromVariant(variant* v)
{
    {
        variant* v_list = v->get_child("XmlMusicInfoModeList");
        if(v_list == NULL)
        {
            v_list = v;
        }
        int n = v_list->get_child_count();
        for(int i=0; i<n; i++)
        {
            if(!strcmp(v_list->get_key(i), "XmlMusicInfoMode"))
            {
                XmlMusicInfoMode element;
                variant* v_element = v_list->get_child(i);
                if(!element.LoadFromVariant(v_element))
                {
                    return false;
                }
                XmlMusicInfoModeList.emplace_back(element);
            }
        }
    }
    if(from_str_variant(v->get_child("name"), name)<0) return false;
    if(from_str_variant(v->get_child("singer_name"), singer_name)<0) return false;
    if(from_str_variant(v->get_child("id"), id)<0) return false;
    if(from_str_variant(v->get_child("bpm"), bpm)<0) return false;
    if(from_str_variant(v->get_child("duration"), duration)<0) return false;
    if(from_str_variant(v->get_child("ogg_id"), ogg_id)<0) return false;
    if(from_str_variant(v->get_child("star"), star)<0) return false;

    return true;
}
bool XmlMusicDifficulty::LoadFromVariant(variant* v)
{
    if(from_str_variant(v->get_child("diff"), diff)<0) return false;
    if(from_str_variant(v->get_child("max_star"), max_star)<0) return false;

    return true;
}
bool XmlMusicInfo::LoadFromVariant(variant* v)
{
    {
        variant* v_dict = v->get_child("XmlMusicList");
        if(v_dict == NULL)
        {
            v_dict = v;
        }
        int n = v_dict->get_child_count();
        for(int i=0; i<n; i++)
        {
            if(!strcmp(v_dict->get_key(i), "XmlMusic"))
            {
                XmlMusic element;
                variant* v_element = v_dict->get_child(i);
                if(!element.LoadFromVariant(v_element))
                {
                    return false;
                }
                XmlMusicList.emplace(element.id, element);
            }
        }
    }
    {
        variant* v_list = v->get_child("XmlMusicDifficultyList");
        if(v_list == NULL)
        {
            v_list = v;
        }
        int n = v_list->get_child_count();
        for(int i=0; i<n; i++)
        {
            if(!strcmp(v_list->get_key(i), "XmlMusicDifficulty"))
            {
                XmlMusicDifficulty element;
                variant* v_element = v_list->get_child(i);
                if(!element.LoadFromVariant(v_element))
                {
                    return false;
                }
                XmlMusicDifficultyList.emplace_back(element);
            }
        }
    }

    return true;
}

