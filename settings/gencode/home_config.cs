//this file is generated by xml2code tool 7/18/2018 19:28:28
//DO NOT EDIT IT !

using System;
using System.Collections.Generic;
using System.IO;
using System.Xml;
using GYGeneric;

namespace GYXMLData
{
    
    public enum HomeType
    {
        Home001 = 1, 
        Home222 = 2, 
        Home333 = 3, 
    }

    
    public class SceneLevel :IXmlParser
    {
        public int level = 0; 
        public int size = 0; 
        public List<CostItem> upgrade_cost = new List<CostItem>(); 
        public List<ObjectLayout> add_furniture = new List<ObjectLayout>(); 

        public bool Parse(XmlNode node)
        {
            if(node.Attributes!=null && node.Attributes["upgrade_cost"]!=null)
            {
                var s = node.Attributes["upgrade_cost"].Value;
                upgrade_cost = GenericStringParser.GetObjectList<CostItem>(s);
            }
            if(node.Attributes!=null && node.Attributes["add_furniture"]!=null)
            {
                var s = node.Attributes["add_furniture"].Value;
                add_furniture = GenericStringParser.GetObjectList<ObjectLayout>(s);
            }
            if(node.Attributes!=null && node.Attributes["level"]!=null)
            {
                level = int.Parse(node.Attributes["level"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("level");
                if(child!=null)
                {
                    level = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["size"]!=null)
            {
                size = int.Parse(node.Attributes["size"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("size");
                if(child!=null)
                {
                    size = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class Scene :IXmlParser
    {
        public int id = 0; //作为dict的key
        public HomeType hometype = Home001; //枚举
        public string name = "my home"; 
        public int open_level = 0; 
        public List<CostItem> open_cost = new List<CostItem>(); 
        public List<SceneLevel> sceneLevels = new List<SceneLevel>(); //默认从下级节点解析

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("sceneLevels");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var child_node = mid_node.SelectNodes("SceneLevel");
                if(child_node == null)
                {
                    child_node = mid_node.ChildNodes;
                }
                foreach(XmlNode n in child_node)
                {
                    SceneLevel value = new SceneLevel();
                    if(!value.Parse(n))
                    {
                        return false;
                    }
                    sceneLevels.Add(value);
                }
            }
            if(node.Attributes!=null && node.Attributes["open_cost"]!=null)
            {
                var s = node.Attributes["open_cost"].Value;
                open_cost = GenericStringParser.GetObjectList<CostItem>(s);
            }
            if(node.Attributes!=null && node.Attributes["name"]!=null)
            {
                name = node.Attributes["name"].Value;
            }
            else
            {
                var child = node.SelectSingleNode("name");
                if(child!=null)
                {
                    name = child.InnerText;
                }
            }
            if(node.Attributes!=null && node.Attributes["hometype"]!=null)
            {
                hometype = (HomeType)int.Parse(node.Attributes["hometype"].Value);
            }
            if(node.Attributes!=null && node.Attributes["id"]!=null)
            {
                id = int.Parse(node.Attributes["id"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("id");
                if(child!=null)
                {
                    id = int.Parse(child.InnerText);
                }
            }
            if(node.Attributes!=null && node.Attributes["open_level"]!=null)
            {
                open_level = int.Parse(node.Attributes["open_level"].Value);
            }
            else
            {
                var child = node.SelectSingleNode("open_level");
                if(child!=null)
                {
                    open_level = int.Parse(child.InnerText);
                }
            }

            return true;
        }
    }

    
    public class HomeConfig :IXmlParser
    {
        public Dictionary<int,Scene> sceneList = new Dictionary<int,Scene>(); 

        public bool Parse(XmlNode node)
        {
            {
                var mid_node = node.SelectSingleNode("sceneList");
                if(mid_node==null)
                {
                    mid_node = node;
                }
                var nodes = mid_node.SelectNodes("Scene");
                if(nodes!=null)
                {
                    foreach(XmlNode n in nodes)
                    {
                        Scene value = new Scene();
                        if(!value.Parse(n))
                        {
                            return false;
                        }
                        sceneList.Add(value.id, value);
                    }
                }
            }

            return true;
        }
    }

}
