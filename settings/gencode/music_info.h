//this file is generated by xml2code tool at 7/19/2018 17:04:32
//do NOT edit it !

#pragma once
#include <map>
#include <vector>
#include <string>
#include "../shared/xml_config_interface.h"

//enum

//class

struct XmlMusicInfoMode : public IXmlParser
{
    int value; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct XmlMusic : public IXmlParser
{
    int id; 
    std::string name; 
    std::string singer_name; 
    int bpm; 
    int duration; 
    int ogg_id; 
    int star; 
    std::vector<XmlMusicInfoMode> XmlMusicInfoModeList; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct XmlMusicDifficulty : public IXmlParser
{
    int diff; 
    int max_star; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct XmlMusicInfo : public IXmlParser
{
    std::map<int,XmlMusic> XmlMusicList; 
    std::vector<XmlMusicDifficulty> XmlMusicDifficultyList; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

//hotfix
class music_info_hotfix_xml:public IHotfixXml
{
public:
    virtual bool Load(variant* v);
    virtual void* Root(){return root;}
private:
    XmlMusicInfo* root;
};
