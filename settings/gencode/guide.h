//this file is generated by xml2code tool at 7/19/2018 17:04:32
//do NOT edit it !

#pragma once
#include <map>
#include <vector>
#include <string>
#include "../shared/xml_config_interface.h"
#include "common.h"

//enum

//class

struct lockui : public IXmlParser
{
    float locktime; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct maskinfo : public IXmlParser
{
    int winShowType; 
    Pos maskPos; 
    Size masksize; 
    std::string anchorType; 
    int rotz; 
    bool isMaskTransparent; 
    Pos windowpos; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct action : public IXmlParser
{
    int type; 
    std::string param1; 
    int npc; 
    float delay; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct condition : public IXmlParser
{
    int type; 
    std::string param1; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct Step : public IXmlParser
{
    int id; 
    int type; 
    int backto; 
    bool isLocalStep; 
    std::string padView; 
    lockui lockuiv; 
    maskinfo maskinfov; 
    std::vector<std::string> pop_tip_list; 
    std::vector<action> comm_actions; 
    std::vector<condition> finish_conditions; 
    std::vector<condition> trigger_conditions; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct Group : public IXmlParser
{
    int groupid; 
    int guidetype; 
    std::vector<Step> steps; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct flower : public IXmlParser
{
    int id; 
    int num; 
    int type; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct item : public IXmlParser
{
    int type_id; 
    Pos pos; 
    Pos xiaoyao_pos; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct res : public IXmlParser
{
    std::string picture; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct other_guide_config : public IXmlParser
{
    int garden_guide_seed_id; 
    int garden_per_seed_harvest_num; 
    int garden_synthetic_flower_per_need; 
    std::vector<flower> garden_synthetic_flower_list; 
    std::vector<item> collection_position_config; 
    int forge_product_id_boy; 
    int forge_product_id_girl; 
    std::string happy_match_title_res; 
    std::vector<res> happy_match_res; 
    std::string arena2v2_match_title_res; 
    std::vector<res> arena2v2_match_res; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

struct Groups : public IXmlParser
{
    std::map<int,Group> groups; 
    other_guide_config other_cfg; 
    bool LoadFromString(std::string s);
    bool LoadFromVariant(variant* v);
};

//hotfix
class guide_hotfix_xml:public IHotfixXml
{
public:
    virtual bool Load(variant* v);
    virtual void* Root(){return root;}
private:
    Groups* root;
};
