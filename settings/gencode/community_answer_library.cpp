//this file is generated by xml2code tool at 7/19/2018 17:04:32
//do NOT edit it !

#include "community_answer_library.h"
#include <sstream>

bool Answer::LoadFromString(std::string s)
{
    return false;
}
bool AnswerLibrary::LoadFromString(std::string s)
{
    return false;
}

bool Answer::LoadFromVariant(variant* v)
{
    {
        variant* v_list = v->get_child("choice_answer_list");
        if(v_list == NULL)
        {
            v_list = v;
        }
        int n = v_list->get_child_count();
        for(int i=0; i<n; i++)
        {
            std::string element;
            if(from_str_variant(v_list->get_child(i), element)<0)
            {
                return false;
            }
            choice_answer_list.emplace_back(element);
        }
    }
    if(from_str_variant(v->get_child("content"), content)<0) return false;
    if(from_str_variant(v->get_child("id"), id)<0) return false;
    if(from_str_variant(v->get_child("result"), result)<0) return false;

    return true;
}
bool AnswerLibrary::LoadFromVariant(variant* v)
{
    {
        variant* v_dict = v->get_child("answers");
        if(v_dict == NULL)
        {
            v_dict = v;
        }
        int n = v_dict->get_child_count();
        for(int i=0; i<n; i++)
        {
            if(!strcmp(v_dict->get_key(i), "Answer"))
            {
                Answer element;
                variant* v_element = v_dict->get_child(i);
                if(!element.LoadFromVariant(v_element))
                {
                    return false;
                }
                answers.emplace(element.id, element);
            }
        }
    }

    return true;
}

